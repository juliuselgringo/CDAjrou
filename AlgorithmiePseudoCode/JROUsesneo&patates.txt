Julien Rousselot
//____________________________Les pairs_________________________________________
function writeEven() {
    Variable userNumber: [entier];

    début
        userNumber = saisir("Saisissez un nombre entier positif: ");
        si(userNumber < 0){
            écrire("Erreur: Le nombre saisi n'est pas un entier positif!");
        }
        Pour(Variable i: [entier] = 0; i <= userNumber; i++){
            si(i % 2 = 0) {
                écrire(i);
            }
        }
    fin
}

//________________________________Senseo_________________________________________
class Senseo{
    Variable waterLevel: [booleen] = waterLevelCapter();
    Variable waterTemperature: [entier] = waterTemperatureCapter();

    Variable senseoPowerButton: [bool] = false;
    Variable senseoPower: [booleen] = false;

    Variable coffeeFlowSwitch: [booleen] = false;
    Variable coffeeFlowLed: [booleen] = false;

    Variable pouredWater: [réels] = 0;


    function senseoSwitchPower(){
        senseoPowerButton.addEventListener("witch", (e) => {
            senseoPower ?false :true;
        }) 
    }

    function boilWater(){
        si(senseoPower && waterLevel) {
            Pour(Variable i: [entier]; waterTemperature <= 100; i+2){
                waterTemperature = waterTemperature + i;
            }
        }
        coffeeFlowLed := true
    }

    function coffeeFlow() {
        si(coffeeFlowSwitch && coffeeFlowLed) {
            Pour(Variable i: [réels] = 0; pouredWater <= 0.1; i + 0.01){
                pouredWater = pouredWater + i
            }
            coffeeFlowLed := false;
        }
    }

}

//_______________________Les Pommes de terre_______________________________________

function routeNumberCounter() {
    Variable potatoToPeel: [entier] = 12;
    Constante potatoInBasket: [entier] = 3;
    Variable routeNumber: [entier] = 0;
    Variable potatoPeel: [entier] = 0;

    début
        tant que( potatoPeel <= potatoToPeel){
            routeNumber += 1;
            potatoPeel = potatoPeel + 3;
        }
        écrire("Il faut " + routeNumber + " aller/retour à la cave pour épelucher les " + potatoToPeel + " pommes de terre.")
    fin
}